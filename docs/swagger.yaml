basePath: /api
definitions:
  api.ErrorForbiddenExample:
    properties:
      error:
        example: you cannot access this resource
        type: string
      status:
        example: Forbidden
        type: string
    type: object
  api.ErrorInternalServerExample:
    properties:
      error:
        example: server error during request handling
        type: string
      status:
        example: Internal Server Error
        type: string
    type: object
  api.ErrorInvalidRequestExample:
    properties:
      error:
        example: resource with the ID does not exist
        type: string
      status:
        example: Invalid request
        type: string
    type: object
  api.ErrorNotFoundExample:
    properties:
      error:
        example: resource with ID '66741a8c-c2ba-4357-a2c9-ee78e0e7' does not exist
        type: string
      status:
        example: Resource not found
        type: string
    type: object
  api.ErrorRenderExample:
    properties:
      error:
        example: rendering error
        type: string
      status:
        example: Error rendering response
        type: string
    type: object
  dto.Contact:
    properties:
      id:
        example: 1dd38765-c5be-418d-81fa-7a5f879c2315
        type: string
      team_id:
        type: string
      type:
        example: mail
        type: string
      user:
        example: ""
        type: string
      value:
        example: devops@example.com
        type: string
    type: object
  dto.ContactList:
    properties:
      list:
        items:
          $ref: '#/definitions/moira.ContactData'
        type: array
    type: object
  dto.EventsList:
    properties:
      list:
        items:
          $ref: '#/definitions/moira.NotificationEvent'
        type: array
      page:
        example: 0
        type: integer
      size:
        example: 100
        type: integer
      total:
        example: 10
        type: integer
    type: object
  dto.MessageResponse:
    properties:
      message:
        example: tag deleted
        type: string
    type: object
  dto.NotificationDeleteResponse:
    properties:
      result:
        example: 0
        type: integer
    type: object
  dto.NotificationsList:
    properties:
      list:
        items:
          $ref: '#/definitions/moira.ScheduledNotification'
        type: array
      total:
        example: 0
        type: integer
    type: object
  dto.NotifierState:
    properties:
      message:
        example: Moira has been turned off for maintenance
        type: string
      state:
        example: ERROR
        type: string
    type: object
  dto.PatternData:
    properties:
      metrics:
        example:
        - DevOps.my_server.hdd.freespace_mbytes
        - ' DevOps.my_server.hdd.freespace_mbytes'
        - ' DevOps.my_server.db.*'
        items:
          type: string
        type: array
      pattern:
        example: Devops.my_server.*
        type: string
      triggers:
        items:
          $ref: '#/definitions/dto.TriggerModel'
        type: array
    type: object
  dto.PatternList:
    properties:
      list:
        items:
          $ref: '#/definitions/dto.PatternData'
        type: array
    type: object
  dto.Subscription:
    properties:
      any_tags:
        example: false
        type: boolean
      contacts:
        example:
        - acd2db98-1659-4a2f-b227-52d71f6e3ba1
        items:
          type: string
        type: array
      enabled:
        example: true
        type: boolean
      id:
        example: 292516ed-4924-4154-a62c-ebe312431fce
        type: string
      ignore_recoverings:
        example: false
        type: boolean
      ignore_warnings:
        example: false
        type: boolean
      plotting:
        $ref: '#/definitions/moira.PlottingData'
      sched:
        $ref: '#/definitions/moira.ScheduleData'
      tags:
        example:
        - server
        - cpu
        items:
          type: string
        type: array
      team_id:
        example: 324516ed-4924-4154-a62c-eb124234fce
        type: string
      throttling:
        example: false
        type: boolean
      user:
        example: ""
        type: string
    type: object
  dto.SubscriptionList:
    properties:
      list:
        items:
          $ref: '#/definitions/moira.SubscriptionData'
        type: array
    type: object
  dto.TagStatistics:
    properties:
      name:
        example: cpu
        type: string
      subscriptions:
        items:
          $ref: '#/definitions/moira.SubscriptionData'
        type: array
      triggers:
        example:
        - bcba82f5-48cf-44c0-b7d6-e1d32c64a88c
        items:
          type: string
        type: array
    type: object
  dto.TagsData:
    properties:
      list:
        example:
        - cpu
        items:
          type: string
        type: array
    type: object
  dto.TagsStatistics:
    properties:
      list:
        items:
          $ref: '#/definitions/dto.TagStatistics'
        type: array
    type: object
  dto.TriggerModel:
    properties:
      alone_metrics:
        additionalProperties:
          type: boolean
        description: A list of targets that have only alone metrics
        example:
          t1: true
        type: object
      created_at:
        description: Datetime when the trigger was created
        type: string
      created_by:
        description: Username who created trigger
        type: string
      desc:
        description: Description string
        example: check the size of /var/log
        type: string
      error_value:
        description: ERROR threshold
        example: 1000
        type: number
      expression:
        description: Used if you need more complex logic than provided by WARN/ERROR
          values
        example: ""
        type: string
      id:
        description: Trigger unique ID
        example: 292516ed-4924-4154-a62c-ebe312431fce
        type: string
      is_remote:
        description: Shows if trigger is remote (graphite-backend) based or stored
          inside Moira-Redis DB
        example: false
        type: boolean
      mute_new_metrics:
        description: If true, first event NODATA â†’ OK will be omitted
        example: false
        type: boolean
      name:
        description: Trigger name
        example: Not enough disk space left
        type: string
      patterns:
        description: Graphite patterns for trigger
        example:
        - ""
        items:
          type: string
        type: array
      sched:
        allOf:
        - $ref: '#/definitions/moira.ScheduleData'
        description: Determines when Moira should monitor trigger
      tags:
        description: Set of tags to manipulate subscriptions
        example:
        - server
        - ' disk'
        items:
          type: string
        type: array
      targets:
        description: 'Graphite-like targets: t1, t2, ...'
        example:
        - devOps.my_server.hdd.freespace_mbytes
        items:
          type: string
        type: array
      trigger_type:
        description: 'Could be: rising, falling, expression'
        example: rising
        type: string
      ttl:
        description: When there are no metrics for trigger, Moira will switch metric
          to TTLState state after TTL seconds
        example: 600
        type: integer
      ttl_state:
        description: When there are no metrics for trigger, Moira will switch metric
          to TTLState state after TTL seconds
        example: NODATA
        type: string
      updated_at:
        description: Datetime  when the trigger was updated
        type: string
      updated_by:
        description: Username who updated trigger
        type: string
      warn_value:
        description: WARN threshold
        example: 5000
        type: number
    type: object
  handler.ConfigurationResponse:
    properties:
      contacts:
        items:
          $ref: '#/definitions/handler.Contact'
        type: array
      remoteAllowed:
        example: false
        type: boolean
    type: object
  handler.Contact:
    properties:
      label:
        example: Telegram
        type: string
      type:
        example: telegram
        type: string
    type: object
  moira.ContactData:
    properties:
      id:
        example: 1dd38765-c5be-418d-81fa-7a5f879c2315
        type: string
      team:
        type: string
      type:
        example: mail
        type: string
      user:
        example: ""
        type: string
      value:
        example: devops@example.com
        type: string
    type: object
  moira.EventInfo:
    properties:
      interval:
        example: 0
        type: integer
      maintenance:
        $ref: '#/definitions/moira.MaintenanceInfo'
    type: object
  moira.MaintenanceInfo:
    properties:
      remove_time:
        example: 0
        type: integer
      remove_user:
        type: string
      setup_time:
        example: 0
        type: integer
      setup_user:
        type: string
    type: object
  moira.NotificationEvent:
    properties:
      contactId:
        type: string
      event_message:
        $ref: '#/definitions/moira.EventInfo'
      metric:
        example: carbon.agents.*.metricsReceived
        type: string
      msg:
        type: string
      old_state:
        example: ERROR
        type: string
      state:
        example: OK
        type: string
      sub_id:
        type: string
      timestamp:
        example: 1590741878
        type: integer
      trigger_event:
        example: true
        type: boolean
      trigger_id:
        example: 5ff37996-8927-4cab-8987-970e80d8e0a8
        type: string
      value:
        example: 70
        type: number
      values:
        additionalProperties:
          type: number
        type: object
    type: object
  moira.PlottingData:
    properties:
      enabled:
        example: true
        type: boolean
      theme:
        example: dark
        type: string
    type: object
  moira.ScheduleData:
    properties:
      days:
        items:
          $ref: '#/definitions/moira.ScheduleDataDay'
        type: array
      endOffset:
        example: 1439
        type: integer
      startOffset:
        example: 0
        type: integer
      tzOffset:
        example: -60
        type: integer
    type: object
  moira.ScheduleDataDay:
    properties:
      enabled:
        example: true
        type: boolean
      name:
        example: Mon
        type: string
    type: object
  moira.ScheduledNotification:
    properties:
      contact:
        $ref: '#/definitions/moira.ContactData'
      event:
        $ref: '#/definitions/moira.NotificationEvent'
      plotting:
        $ref: '#/definitions/moira.PlottingData'
      send_fail:
        example: 0
        type: integer
      throttled:
        example: false
        type: boolean
      timestamp:
        example: 1594471927
        type: integer
      trigger:
        $ref: '#/definitions/moira.TriggerData'
    type: object
  moira.SubscriptionData:
    properties:
      any_tags:
        example: false
        type: boolean
      contacts:
        example:
        - acd2db98-1659-4a2f-b227-52d71f6e3ba1
        items:
          type: string
        type: array
      enabled:
        example: true
        type: boolean
      id:
        example: 292516ed-4924-4154-a62c-ebe312431fce
        type: string
      ignore_recoverings:
        example: false
        type: boolean
      ignore_warnings:
        example: false
        type: boolean
      plotting:
        $ref: '#/definitions/moira.PlottingData'
      sched:
        $ref: '#/definitions/moira.ScheduleData'
      tags:
        example:
        - server
        - cpu
        items:
          type: string
        type: array
      team_id:
        example: 324516ed-4924-4154-a62c-eb124234fce
        type: string
      throttling:
        example: false
        type: boolean
      user:
        example: ""
        type: string
    type: object
  moira.TriggerData:
    properties:
      __notifier_trigger_tags:
        example:
        - server
        - disk
        items:
          type: string
        type: array
      desc:
        example: check the size of /var/log
        type: string
      error_value:
        example: 1000
        type: number
      id:
        example: 292516ed-4924-4154-a62c-ebe312431fce
        type: string
      is_remote:
        example: false
        type: boolean
      name:
        example: Not enough disk space left
        type: string
      targets:
        example:
        - devOps.my_server.hdd.freespace_mbytes
        items:
          type: string
        type: array
      warn_value:
        example: 5000
        type: number
    type: object
info:
  contact:
    email: opensource@skbkontur.com
    name: Contact Moira Team
  description: This is an API description for [Moira Alert API](https://moira.readthedocs.io/en/latest/overview.html).
  license:
    name: MIT
  title: Moira Alert
  version: master
paths:
  /api/config:
    get:
      operationId: get-web-config
      produces:
      - application/json
      responses:
        "200":
          description: Configuration fetched successfully
          schema:
            $ref: '#/definitions/handler.ConfigurationResponse'
      summary: Get available configuration
      tags:
      - config
  /contact:
    get:
      operationId: get-all-contacts
      produces:
      - application/json
      responses:
        "200":
          description: Contacts fetched successfully
          schema:
            $ref: '#/definitions/dto.ContactList'
        "422":
          description: Render error
          schema:
            $ref: '#/definitions/api.ErrorRenderExample'
      summary: Gets all Moira contacts
      tags:
      - contact
    put:
      consumes:
      - application/json
      operationId: create-new-contact
      parameters:
      - description: Contact data
        in: body
        name: contact
        required: true
        schema:
          $ref: '#/definitions/dto.Contact'
      produces:
      - application/json
      responses:
        "200":
          description: Contact created successfully
          schema:
            $ref: '#/definitions/dto.Contact'
        "400":
          description: Bad request from client
          schema:
            $ref: '#/definitions/api.ErrorInvalidRequestExample'
        "422":
          description: Render error
          schema:
            $ref: '#/definitions/api.ErrorRenderExample'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.ErrorInternalServerExample'
      summary: Creates a new contact notification for the current user
      tags:
      - contact
  /contact/{contactId}:
    delete:
      consumes:
      - application/json
      operationId: remove-contact
      parameters:
      - description: ID of the contact to remove
        in: path
        name: contactId
        required: true
        type: string
        x-example: bcba82f5-48cf-44c0-b7d6-e1d32c64a88c
      produces:
      - application/json
      responses:
        "200":
          description: Contact has been deleted
        "400":
          description: Bad request from client
          schema:
            $ref: '#/definitions/api.ErrorInvalidRequestExample'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/api.ErrorForbiddenExample'
        "404":
          description: Resource not found
          schema:
            $ref: '#/definitions/api.ErrorNotFoundExample'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.ErrorInternalServerExample'
      summary: Deletes notification contact for the current user and remove the contact
        ID from all subscriptions
      tags:
      - contact
    put:
      consumes:
      - application/json
      operationId: update-contact
      parameters:
      - description: ID of the contact to update
        in: path
        name: contactId
        required: true
        type: string
      - description: Updated contact data
        in: body
        name: contact
        required: true
        schema:
          $ref: '#/definitions/dto.Contact'
      produces:
      - application/json
      responses:
        "200":
          description: Updated contact
          schema:
            $ref: '#/definitions/dto.Contact'
        "400":
          description: Bad request from client
          schema:
            $ref: '#/definitions/api.ErrorInvalidRequestExample'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/api.ErrorForbiddenExample'
        "404":
          description: Resource not found
          schema:
            $ref: '#/definitions/api.ErrorNotFoundExample'
        "422":
          description: Render error
          schema:
            $ref: '#/definitions/api.ErrorRenderExample'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.ErrorInternalServerExample'
      summary: Updates an existing notification contact to the values passed in the
        request body
      tags:
      - contact
  /contact/{contactId}/test:
    post:
      consumes:
      - application/json
      operationId: send-test-contact-notification
      parameters:
      - description: The ID of the target contact
        in: path
        name: contactId
        required: true
        type: string
        x-example: bcba82f5-48cf-44c0-b7d6-e1d32c64a88c
      produces:
      - application/json
      responses:
        "200":
          description: Test successful
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/api.ErrorForbiddenExample'
        "404":
          description: Resource not found
          schema:
            $ref: '#/definitions/api.ErrorNotFoundExample'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.ErrorInternalServerExample'
      summary: Push a test notification to verify that the contact is properly set
        up
      tags:
      - contact
  /event/{triggerId}:
    get:
      operationId: get-events-list
      parameters:
      - description: The ID of updated trigger
        in: path
        name: triggerId
        required: true
        type: string
        x-example: 5A8AF369-86D2-44DD-B514-D47995ED6AF7
      - description: Number of items to be displayed on one page
        in: query
        name: size
        type: integer
        x-example: "15"
      - description: Defines the number of the displayed page. E.g, p=2 would display
          the 2nd page
        in: query
        name: p
        type: integer
        x-example: "1"
      produces:
      - application/json
      responses:
        "200":
          description: Events fetched successfully
          schema:
            $ref: '#/definitions/dto.EventsList'
        "400":
          description: Bad request from client
          schema:
            $ref: '#/definitions/api.ErrorInvalidRequestExample'
        "404":
          description: Resource not found
          schema:
            $ref: '#/definitions/api.ErrorNotFoundExample'
        "422":
          description: Render error
          schema:
            $ref: '#/definitions/api.ErrorRenderExample'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.ErrorInternalServerExample'
      summary: Gets all trigger events for current page and their count
      tags:
      - event
  /event/all:
    delete:
      operationId: delete-all-events
      produces:
      - application/json
      responses:
        "200":
          description: Events removed successfully
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.ErrorInternalServerExample'
      summary: Deletes all notification events
      tags:
      - event
  /health/notifier:
    get:
      operationId: get-notifier-state
      produces:
      - application/json
      responses:
        "200":
          description: Notifier state retrieved
          schema:
            $ref: '#/definitions/dto.NotifierState'
        "422":
          description: Render error
          schema:
            $ref: '#/definitions/api.ErrorRenderExample'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.ErrorInternalServerExample'
      summary: Get notifier state
      tags:
      - health
    put:
      consumes:
      - application/json
      operationId: set-notifier-state
      parameters:
      - description: New notifier state
        in: body
        name: state
        required: true
        schema:
          $ref: '#/definitions/dto.NotifierState'
      produces:
      - application/json
      responses:
        "200":
          description: Update state of the Moira service
          schema:
            $ref: '#/definitions/dto.NotifierState'
        "400":
          description: Bad request from client
          schema:
            $ref: '#/definitions/api.ErrorInvalidRequestExample'
        "422":
          description: Render error
          schema:
            $ref: '#/definitions/api.ErrorRenderExample'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.ErrorInternalServerExample'
      summary: Update notifier state
      tags:
      - health
  /notification:
    delete:
      operationId: delete-notification
      parameters:
      - description: The ID of updated trigger
        in: query
        name: id
        required: true
        type: string
        x-example: 5A8AF369-86D2-44DD-B514-D47995ED6AF7
      produces:
      - application/json
      responses:
        "200":
          description: Notification have been deleted
          schema:
            $ref: '#/definitions/dto.NotificationDeleteResponse'
        "400":
          description: Bad request from client
          schema:
            $ref: '#/definitions/api.ErrorInvalidRequestExample'
        "422":
          description: Render error
          schema:
            $ref: '#/definitions/api.ErrorRenderExample'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.ErrorInternalServerExample'
      summary: Delete a notification by id
      tags:
      - notification
    get:
      operationId: get-notifications
      parameters:
      - description: 'Default Value: 0'
        in: query
        name: start
        type: integer
        x-example: "1"
      - description: 'Default Value: -1'
        in: query
        name: end
        type: integer
        x-example: "15"
      produces:
      - application/json
      responses:
        "200":
          description: Notifications fetched successfully
          schema:
            $ref: '#/definitions/dto.NotificationsList'
        "400":
          description: Bad request from client
          schema:
            $ref: '#/definitions/api.ErrorInvalidRequestExample'
        "422":
          description: Render error
          schema:
            $ref: '#/definitions/api.ErrorRenderExample'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.ErrorInternalServerExample'
      summary: Gets a paginated list of notifications, all notifications are fetched
        if end = -1 and start = 0
      tags:
      - notification
  /notification/all:
    delete:
      operationId: delete-all-notifications
      responses:
        "200":
          description: All notifications have been deleted
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.ErrorInternalServerExample'
      summary: Deletes all available notifications
      tags:
      - notification
  /pattern:
    get:
      operationId: get-all-patterns
      produces:
      - application/json
      responses:
        "200":
          description: Patterns fetched successfully
          schema:
            $ref: '#/definitions/dto.PatternList'
        "422":
          description: Render error
          schema:
            $ref: '#/definitions/api.ErrorRenderExample'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.ErrorInternalServerExample'
      summary: Get all patterns
      tags:
      - pattern
  /pattern/{pattern}:
    delete:
      operationId: delete-pattern
      parameters:
      - description: Trigger pattern to operate on
        in: path
        name: pattern
        required: true
        type: string
        x-example: DevOps.my_server.hdd.freespace_mbytes
      produces:
      - application/json
      responses:
        "200":
          description: Pattern deleted successfully
        "400":
          description: Bad request from client
          schema:
            $ref: '#/definitions/api.ErrorInvalidRequestExample'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.ErrorInternalServerExample'
      summary: Deletes a Moira pattern
      tags:
      - pattern
  /subscription:
    get:
      operationId: get-user-subscriptions
      produces:
      - application/json
      responses:
        "200":
          description: Subscriptions fetched successfully
          schema:
            $ref: '#/definitions/dto.SubscriptionList'
        "422":
          description: Render error
          schema:
            $ref: '#/definitions/api.ErrorRenderExample'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.ErrorInternalServerExample'
      summary: Get all subscriptions
      tags:
      - subscription
    put:
      consumes:
      - application/json
      operationId: create-subscription
      parameters:
      - description: Subscription data
        in: body
        name: subscription
        required: true
        schema:
          $ref: '#/definitions/dto.Subscription'
      produces:
      - application/json
      responses:
        "200":
          description: Subscription created successfully
          schema:
            $ref: '#/definitions/dto.Subscription'
        "400":
          description: Bad request from client
          schema:
            $ref: '#/definitions/api.ErrorInvalidRequestExample'
        "422":
          description: Render error
          schema:
            $ref: '#/definitions/api.ErrorRenderExample'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.ErrorInternalServerExample'
      summary: Create a new subscription
      tags:
      - subscription
  /subscription/{subscriptionId}:
    delete:
      operationId: remove-subscription
      parameters:
      - description: ID of the subscription to remove
        in: path
        name: subscriptionId
        required: true
        type: string
        x-example: bcba82f5-48cf-44c0-b7d6-e1d32c64a88c
      produces:
      - application/json
      responses:
        "200":
          description: Subscription deleted
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/api.ErrorForbiddenExample'
        "404":
          description: Resource not found
          schema:
            $ref: '#/definitions/api.ErrorNotFoundExample'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.ErrorInternalServerExample'
      summary: Delete a subscription
      tags:
      - subscription
    put:
      consumes:
      - application/json
      operationId: update-subscription
      parameters:
      - description: ID of the subscription to update
        in: path
        name: subscriptionId
        required: true
        type: string
        x-example: bcba82f5-48cf-44c0-b7d6-e1d32c64a88c
      - description: Updated subscription data
        in: body
        name: subscription
        required: true
        schema:
          $ref: '#/definitions/dto.Subscription'
      produces:
      - application/json
      responses:
        "200":
          description: Subscription updated successfully
          schema:
            $ref: '#/definitions/dto.Subscription'
        "400":
          description: Bad request from client
          schema:
            $ref: '#/definitions/api.ErrorInvalidRequestExample'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/api.ErrorForbiddenExample'
        "404":
          description: Resource not found
          schema:
            $ref: '#/definitions/api.ErrorNotFoundExample'
        "422":
          description: Render error
          schema:
            $ref: '#/definitions/api.ErrorRenderExample'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.ErrorInternalServerExample'
      summary: Update a subscription
      tags:
      - subscription
  /subscription/{subscriptionId}/test:
    put:
      operationId: send-test-notification
      parameters:
      - description: ID of the subscription to send the test notification
        in: path
        name: subscriptionId
        required: true
        type: string
        x-example: bcba82f5-48cf-44c0-b7d6-e1d32c64a88c
      produces:
      - application/json
      responses:
        "200":
          description: Test notification sent successfully
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/api.ErrorForbiddenExample'
        "404":
          description: Resource not found
          schema:
            $ref: '#/definitions/api.ErrorNotFoundExample'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.ErrorInternalServerExample'
      summary: Send a test notification for a subscription
      tags:
      - subscription
  /tag:
    get:
      operationId: get-all-tags
      produces:
      - application/json
      responses:
        "200":
          description: Tags fetched successfully
          schema:
            $ref: '#/definitions/dto.TagsData'
        "422":
          description: Render error
          schema:
            $ref: '#/definitions/api.ErrorRenderExample'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.ErrorInternalServerExample'
      summary: Get all tags
      tags:
      - tag
  /tag/{tag}:
    delete:
      operationId: remove-tag
      parameters:
      - description: Name of the tag to remove
        in: path
        name: tag
        required: true
        type: string
        x-example: cpu
      produces:
      - application/json
      responses:
        "200":
          description: Tag removed successfully
          schema:
            $ref: '#/definitions/dto.MessageResponse'
        "400":
          description: Bad request from client
          schema:
            $ref: '#/definitions/api.ErrorInvalidRequestExample'
        "422":
          description: Render error
          schema:
            $ref: '#/definitions/api.ErrorRenderExample'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.ErrorInternalServerExample'
      summary: Remove a tag
      tags:
      - tag
  /tag/stats:
    get:
      operationId: get-all-tags-and-subscriptions
      produces:
      - application/json
      responses:
        "200":
          description: Successful
          schema:
            $ref: '#/definitions/dto.TagsStatistics'
        "422":
          description: Render error
          schema:
            $ref: '#/definitions/api.ErrorRenderExample'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.ErrorInternalServerExample'
      summary: Get all tags and their subscriptions
      tags:
      - tag
  /team/{teamID}/subscriptions:
    post:
      consumes:
      - application/json
      operationId: create-new-team-subscription
      parameters:
      - description: The ID of team
        in: path
        name: teamID
        required: true
        type: string
        x-example: d5d98eb3-ee18-4f75-9364-244f67e23b54
      - description: Team subscription data
        in: body
        name: subscription
        required: true
        schema:
          $ref: '#/definitions/dto.Subscription'
      produces:
      - application/json
      responses:
        "200":
          description: Team subscription created successfully
          schema:
            $ref: '#/definitions/dto.Subscription'
        "400":
          description: Bad request from client
          schema:
            $ref: '#/definitions/api.ErrorInvalidRequestExample'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/api.ErrorForbiddenExample'
        "404":
          description: Resource not found
          schema:
            $ref: '#/definitions/api.ErrorNotFoundExample'
        "422":
          description: Render error
          schema:
            $ref: '#/definitions/api.ErrorRenderExample'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.ErrorInternalServerExample'
      summary: Create a new team subscription
      tags:
      - teamSubscription
  /teams/{teamID}/contacts:
    post:
      consumes:
      - application/json
      operationId: create-new-team-contact
      parameters:
      - description: The ID of team
        in: path
        name: teamID
        required: true
        type: string
        x-example: d5d98eb3-ee18-4f75-9364-244f67e23b54
      - description: Team contact data
        in: body
        name: contact
        required: true
        schema:
          $ref: '#/definitions/dto.Contact'
      produces:
      - application/json
      responses:
        "200":
          description: Team contact created successfully
          schema:
            $ref: '#/definitions/dto.Contact'
        "400":
          description: Bad request from client
          schema:
            $ref: '#/definitions/api.ErrorInvalidRequestExample'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/api.ErrorForbiddenExample'
        "404":
          description: Resource not found
          schema:
            $ref: '#/definitions/api.ErrorNotFoundExample'
        "422":
          description: Render error
          schema:
            $ref: '#/definitions/api.ErrorRenderExample'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.ErrorInternalServerExample'
      summary: Create a new team contact
      tags:
      - teamContact
swagger: "2.0"
tags:
- description: APIs for working with Moira contacts. For more details, see <https://moira.readthedocs.io/en/latest/installation/webhooks_scripts.html#contact/>
  name: contact
- description: View Moira's runtime configuration. For more details, see <https://moira.readthedocs.io/en/latest/installation/configuration.html>
  name: config
- description: APIs for interacting with notification events. See <https://moira.readthedocs.io/en/latest/user_guide/trigger_page.html#event-history/>
    for details
  name: event
- description: interact with Moira states/health status. See <https://moira.readthedocs.io/en/latest/user_guide/selfstate.html#self-state-monitor/>
    for details
  name: health
- description: manage notifications that are currently in queue. See <https://moira.readthedocs.io/en/latest/user_guide/hidden_pages.html#notifications/>
  name: notification
- description: APIs for interacting with graphite patterns in Moira. See <https://moira.readthedocs.io/en/latest/development/architecture.html#pattern/>
  name: pattern
- description: APIs for managing a user's subscription(s). See <https://moira.readthedocs.io/en/latest/development/architecture.html#subscription/>
    to learn about Moira subscriptions
  name: subscription
- description: APIs for managing tags (a grouping of tags and subscriptions). See
    <https://moira.readthedocs.io/en/latest/user_guide/subscriptions.html#tags/>
  name: tag
- description: APIs for interacting with Moira triggers. See <https://moira.readthedocs.io/en/latest/development/architecture.html#trigger/>
    to learn about Triggers
  name: trigger
- description: APIs for interacting with Moira teams
  name: team
- description: APIs for interacting with Moira subscriptions owned by certain team
  name: teamSubscription
- description: APIs for interacting with Moira contacts owned by certain team.
  name: teamContact
