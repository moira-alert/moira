// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/moira-alert/moira (interfaces: Clock)
//
// Generated by this command:
//
//	mockgen -destination=mock/clock/clock.go -package=mock_clock github.com/moira-alert/moira Clock
//

// Package mock_clock is a generated GoMock package.
package mock_clock

import (
	reflect "reflect"
	time "time"

	gomock "go.uber.org/mock/gomock"
)

// MockClock is a mock of Clock interface.
type MockClock struct {
	ctrl     *gomock.Controller
	recorder *MockClockMockRecorder
}

// MockClockMockRecorder is the mock recorder for MockClock.
type MockClockMockRecorder struct {
	mock *MockClock
}

// NewMockClock creates a new mock instance.
func NewMockClock(ctrl *gomock.Controller) *MockClock {
	mock := &MockClock{ctrl: ctrl}
	mock.recorder = &MockClockMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClock) EXPECT() *MockClockMockRecorder {
	return m.recorder
}

// NowUTC mocks base method.
func (m *MockClock) NowUTC() time.Time {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NowUTC")
	ret0, _ := ret[0].(time.Time)
	return ret0
}

// NowUTC indicates an expected call of NowUTC.
func (mr *MockClockMockRecorder) NowUTC() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NowUTC", reflect.TypeOf((*MockClock)(nil).NowUTC))
}

// NowUnix mocks base method.
func (m *MockClock) NowUnix() int64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NowUnix")
	ret0, _ := ret[0].(int64)
	return ret0
}

// NowUnix indicates an expected call of NowUnix.
func (mr *MockClockMockRecorder) NowUnix() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NowUnix", reflect.TypeOf((*MockClock)(nil).NowUnix))
}
