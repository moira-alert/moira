// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/moira-alert/moira/senders/delivery (interfaces: NotificationDeliveryChecker)
//
// Generated by this command:
//
//	mockgen -destination=mock/notifier/delivery/check.go -package=mock_delivery github.com/moira-alert/moira/senders/delivery NotificationDeliveryChecker
//

// Package mock_delivery is a generated GoMock package.
package mock_delivery

import (
	reflect "reflect"

	moira "github.com/moira-alert/moira"
	gomock "go.uber.org/mock/gomock"
)

// MockNotificationDeliveryChecker is a mock of NotificationDeliveryChecker interface.
type MockNotificationDeliveryChecker struct {
	ctrl     *gomock.Controller
	recorder *MockNotificationDeliveryCheckerMockRecorder
}

// MockNotificationDeliveryCheckerMockRecorder is the mock recorder for MockNotificationDeliveryChecker.
type MockNotificationDeliveryCheckerMockRecorder struct {
	mock *MockNotificationDeliveryChecker
}

// NewMockNotificationDeliveryChecker creates a new mock instance.
func NewMockNotificationDeliveryChecker(ctrl *gomock.Controller) *MockNotificationDeliveryChecker {
	mock := &MockNotificationDeliveryChecker{ctrl: ctrl}
	mock.recorder = &MockNotificationDeliveryCheckerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNotificationDeliveryChecker) EXPECT() *MockNotificationDeliveryCheckerMockRecorder {
	return m.recorder
}

// CheckNotificationsDelivery mocks base method.
func (m *MockNotificationDeliveryChecker) CheckNotificationsDelivery(arg0 []string) ([]string, moira.DeliveryTypesCounter) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckNotificationsDelivery", arg0)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(moira.DeliveryTypesCounter)
	return ret0, ret1
}

// CheckNotificationsDelivery indicates an expected call of CheckNotificationsDelivery.
func (mr *MockNotificationDeliveryCheckerMockRecorder) CheckNotificationsDelivery(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckNotificationsDelivery", reflect.TypeOf((*MockNotificationDeliveryChecker)(nil).CheckNotificationsDelivery), arg0)
}
