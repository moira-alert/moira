// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/moira-alert/moira/database/stats (interfaces: StatsReporter)
//
// Generated by this command:
//
//	mockgen -destination=mock/moira-alert/database_stats.go -package=mock_moira_alert github.com/moira-alert/moira/database/stats StatsReporter
//

// Package mock_moira_alert is a generated GoMock package.
package mock_moira_alert

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockStatsReporter is a mock of StatsReporter interface.
type MockStatsReporter struct {
	ctrl     *gomock.Controller
	recorder *MockStatsReporterMockRecorder
}

// MockStatsReporterMockRecorder is the mock recorder for MockStatsReporter.
type MockStatsReporterMockRecorder struct {
	mock *MockStatsReporter
}

// NewMockStatsReporter creates a new mock instance.
func NewMockStatsReporter(ctrl *gomock.Controller) *MockStatsReporter {
	mock := &MockStatsReporter{ctrl: ctrl}
	mock.recorder = &MockStatsReporterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStatsReporter) EXPECT() *MockStatsReporterMockRecorder {
	return m.recorder
}

// StartReport mocks base method.
func (m *MockStatsReporter) StartReport(arg0 <-chan struct{}) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "StartReport", arg0)
}

// StartReport indicates an expected call of StartReport.
func (mr *MockStatsReporterMockRecorder) StartReport(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StartReport", reflect.TypeOf((*MockStatsReporter)(nil).StartReport), arg0)
}
