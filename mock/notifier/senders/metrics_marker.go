// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/moira-alert/moira/senders (interfaces: MetricsMarker)
//
// Generated by this command:
//
//	mockgen -destination=mock/notifier/senders/metrics_marker.go -package=mock_senders github.com/moira-alert/moira/senders MetricsMarker
//

// Package mock_senders is a generated GoMock package.
package mock_senders

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockMetricsMarker is a mock of MetricsMarker interface.
type MockMetricsMarker struct {
	ctrl     *gomock.Controller
	recorder *MockMetricsMarkerMockRecorder
}

// MockMetricsMarkerMockRecorder is the mock recorder for MockMetricsMarker.
type MockMetricsMarkerMockRecorder struct {
	mock *MockMetricsMarker
}

// NewMockMetricsMarker creates a new mock instance.
func NewMockMetricsMarker(ctrl *gomock.Controller) *MockMetricsMarker {
	mock := &MockMetricsMarker{ctrl: ctrl}
	mock.recorder = &MockMetricsMarkerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetricsMarker) EXPECT() *MockMetricsMarkerMockRecorder {
	return m.recorder
}

// MarkDeliveryFailed mocks base method.
func (m *MockMetricsMarker) MarkDeliveryFailed() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "MarkDeliveryFailed")
}

// MarkDeliveryFailed indicates an expected call of MarkDeliveryFailed.
func (mr *MockMetricsMarkerMockRecorder) MarkDeliveryFailed() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MarkDeliveryFailed", reflect.TypeOf((*MockMetricsMarker)(nil).MarkDeliveryFailed))
}

// MarkDeliveryOK mocks base method.
func (m *MockMetricsMarker) MarkDeliveryOK() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "MarkDeliveryOK")
}

// MarkDeliveryOK indicates an expected call of MarkDeliveryOK.
func (mr *MockMetricsMarkerMockRecorder) MarkDeliveryOK() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MarkDeliveryOK", reflect.TypeOf((*MockMetricsMarker)(nil).MarkDeliveryOK))
}
